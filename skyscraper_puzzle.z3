; skyscraper puzzle
; https://brainbashers.com/showskyscraper.asp?date=1228&size=5&diff=2

(declare-const A1 Int)
(declare-const A2 Int)
(declare-const A3 Int)
(declare-const A4 Int)
(declare-const A5 Int)

(declare-const B1 Int)
(declare-const B2 Int)
(declare-const B3 Int)
(declare-const B4 Int)
(declare-const B5 Int)

(declare-const C1 Int)
(declare-const C2 Int)
(declare-const C3 Int)
(declare-const C4 Int)
(declare-const C5 Int)

(declare-const D1 Int)
(declare-const D2 Int)
(declare-const D3 Int)
(declare-const D4 Int)
(declare-const D5 Int)

(declare-const E1 Int)
(declare-const E2 Int)
(declare-const E3 Int)
(declare-const E4 Int)
(declare-const E5 Int)

(define-fun isInbetweenRange ((min Int) (max Int) (value Int)) Bool
  (and (>= value min) (<= value max))
)

(declare-fun numOfVisibleTowers ((Int) (Int) (Int) (Int) (Int)) Int)

(assert
    (and
        ; restrictions required for function definition
        ; this is basically bruteforcing the undefined function until
        ; it has the desired definition. A bit clunky but it works!
        (= 5 (numOfVisibleTowers 1 2 3 4 5))
        (= 4 (numOfVisibleTowers 1 2 3 5 4))
        (= 3 (numOfVisibleTowers 1 2 5 4 3))
        (= 2 (numOfVisibleTowers 1 5 3 4 2))
        (= 1 (numOfVisibleTowers 5 2 3 4 1))
        (= 1 (numOfVisibleTowers 5 4 3 2 1))
        (= 2 (numOfVisibleTowers 4 2 3 1 5))
        (= 3 (numOfVisibleTowers 2 1 4 3 5))
        (= 2 (numOfVisibleTowers 2 5 1 3 4))
        (= 3 (numOfVisibleTowers 1 4 3 5 2))
        (= 2 (numOfVisibleTowers 4 3 5 2 1))
        (= 1 (numOfVisibleTowers 5 2 4 1 3))
        (= 3 (numOfVisibleTowers 3 1 2 4 5))
        (= 2 (numOfVisibleTowers 3 5 4 1 2))
        (= 5 (numOfVisibleTowers 1 2 3 4 5))
        (= 3 (numOfVisibleTowers 2 4 5 3 1))
        (= 2 (numOfVisibleTowers 4 1 2 5 3))
        (= 1 (numOfVisibleTowers 5 3 1 2 4))
        (= 1 (numOfVisibleTowers 5 4 2 1 3))
        (= 3 (numOfVisibleTowers 3 1 4 2 5))
        (= 3 (numOfVisibleTowers 1 2 5 3 4))
        (= 2 (numOfVisibleTowers 2 5 3 4 1))
        (= 2 (numOfVisibleTowers 4 3 1 5 2))
        (= 2 (numOfVisibleTowers 4 2 1 3 5))
        (= 2 (numOfVisibleTowers 3 5 2 1 4))
        (= 3 (numOfVisibleTowers 1 3 5 4 2))
        (= 1 (numOfVisibleTowers 5 4 3 2 1))
        (= 3 (numOfVisibleTowers 2 1 4 5 3))
        (= 3 (numOfVisibleTowers 2 1 4 5 3))
        (= 3 (numOfVisibleTowers 3 4 2 5 1))
        (= 2 (numOfVisibleTowers 4 5 1 2 3))
        (= 4 (numOfVisibleTowers 1 2 4 3 5))
        (= 2 (numOfVisibleTowers 2 5 1 4 3))
        (= 1 (numOfVisibleTowers 5 3 4 1 2))
        (= 2 (numOfVisibleTowers 3 2 1 5 4))
        (= 2 (numOfVisibleTowers 1 5 2 4 3))
        (= 3 (numOfVisibleTowers 1 3 5 2 4))
        (= 1 (numOfVisibleTowers 5 2 3 4 1))
        (= 2 (numOfVisibleTowers 4 5 2 1 3))
        (= 2 (numOfVisibleTowers 1 5 3 4 2))
        (= 1 (numOfVisibleTowers 5 4 2 3 1))
        (= 2 (numOfVisibleTowers 4 1 5 2 3))
        (= 2 (numOfVisibleTowers 4 5 3 1 2))
        (= 2 (numOfVisibleTowers 4 5 1 3 2))
        (= 4 (numOfVisibleTowers 1 3 4 2 5))
        (= 2 (numOfVisibleTowers 3 5 2 4 1))
        (= 3 (numOfVisibleTowers 2 1 3 5 4))
        (= 4 (numOfVisibleTowers 1 2 4 3 5))
        (= 1 (numOfVisibleTowers 5 3 2 4 1))
        (= 2 (numOfVisibleTowers 4 1 5 3 2))
        (= 2 (numOfVisibleTowers 4 3 2 5 1))
        (= 3 (numOfVisibleTowers 3 1 4 5 2))
        (= 2 (numOfVisibleTowers 4 5 3 2 1))
        (= 3 (numOfVisibleTowers 2 3 5 4 1))
        (= 2 (numOfVisibleTowers 1 5 2 3 4))
        (= 2 (numOfVisibleTowers 3 5 1 4 2))
        (= 4 (numOfVisibleTowers 2 3 4 5 1))
        (= 4 (numOfVisibleTowers 1 3 4 5 2))
        (= 2 (numOfVisibleTowers 3 1 5 2 4))
        (= 1 (numOfVisibleTowers 5 1 3 4 2))
        (= 2 (numOfVisibleTowers 2 5 4 3 1))
        (= 2 (numOfVisibleTowers 4 3 1 2 5))
        (= 3 (numOfVisibleTowers 2 4 1 3 5))
        (= 2 (numOfVisibleTowers 4 3 5 1 2))
        (= 3 (numOfVisibleTowers 3 2 4 5 1))
        (= 3 (numOfVisibleTowers 3 4 1 2 5))
        (= 2 (numOfVisibleTowers 4 2 3 5 1))
        (= 3 (numOfVisibleTowers 1 4 5 3 2))
        (= 1 (numOfVisibleTowers 5 2 1 4 3))
        (= 3 (numOfVisibleTowers 1 4 5 2 3))
        (= 2 (numOfVisibleTowers 4 1 3 2 5))
        (= 2 (numOfVisibleTowers 3 1 5 4 2))
        (= 2 (numOfVisibleTowers 4 5 2 3 1))
        (= 3 (numOfVisibleTowers 2 4 3 5 1))
        (= 1 (numOfVisibleTowers 5 1 4 3 2))
        (= 2 (numOfVisibleTowers 3 2 5 1 4))
        (= 2 (numOfVisibleTowers 3 5 4 2 1))
        (= 4 (numOfVisibleTowers 2 1 3 4 5))
        (= 4 (numOfVisibleTowers 2 3 1 4 5))
        (= 3 (numOfVisibleTowers 3 2 4 1 5))
        (= 1 (numOfVisibleTowers 5 4 1 2 3))
        (= 3 (numOfVisibleTowers 1 3 2 5 4))
        (= 2 (numOfVisibleTowers 1 5 4 3 2))
        (= 3 (numOfVisibleTowers 1 3 5 1 4))

        ; actual usage of function
        (= 4 (numOfVisibleTowers A1 A2 A3 A4 A5))
        (= 1 (numOfVisibleTowers B1 B2 B3 B4 B5))
        (= 3 (numOfVisibleTowers C1 C2 C3 C4 C5))
        (= 2 (numOfVisibleTowers D1 D2 D3 D4 D5))
        (= 2 (numOfVisibleTowers E1 E2 E3 E4 E5))

        (= 3 (numOfVisibleTowers E1 D1 C1 B1 A1))
        (= 2 (numOfVisibleTowers E2 D2 C2 B2 A2))
        (= 1 (numOfVisibleTowers E3 D3 C3 B3 A3))
        (= 2 (numOfVisibleTowers E4 D4 C4 B4 A4))
        (= 2 (numOfVisibleTowers E5 D5 C5 B5 A5))

        (= 2 (numOfVisibleTowers E5 E4 E3 E2 E1))
        (= 2 (numOfVisibleTowers D5 D4 D3 D2 D1))
        (= 2 (numOfVisibleTowers C5 C4 C3 C2 C1))
        (= 3 (numOfVisibleTowers B5 B4 B3 B2 B1))
        (= 1 (numOfVisibleTowers A5 A4 A3 A2 A1))

        (= 1 (numOfVisibleTowers A5 B5 C5 D5 E5))
        (= 3 (numOfVisibleTowers A4 B4 C4 D4 E4))
        (= 2 (numOfVisibleTowers A3 B3 C3 D3 E3))
        (= 4 (numOfVisibleTowers A2 B2 C2 D2 E2))
        (= 2 (numOfVisibleTowers A1 B1 C1 D1 E1))

        ; clamping values between 1 and 5
        (isInbetweenRange 1 5 A1)
        (isInbetweenRange 1 5 A2)
        (isInbetweenRange 1 5 A3)
        (isInbetweenRange 1 5 A4)
        (isInbetweenRange 1 5 A5)

        (isInbetweenRange 1 5 B1)
        (isInbetweenRange 1 5 B2)
        (isInbetweenRange 1 5 B3)
        (isInbetweenRange 1 5 B4)
        (isInbetweenRange 1 5 B5)

        (isInbetweenRange 1 5 C1)
        (isInbetweenRange 1 5 C2)
        (isInbetweenRange 1 5 C3)
        (isInbetweenRange 1 5 C4)
        (isInbetweenRange 1 5 C5)

        (isInbetweenRange 1 5 D1)
        (isInbetweenRange 1 5 D2)
        (isInbetweenRange 1 5 D3)
        (isInbetweenRange 1 5 D4)
        (isInbetweenRange 1 5 D5)

        (isInbetweenRange 1 5 E1)
        (isInbetweenRange 1 5 E2)
        (isInbetweenRange 1 5 E3)
        (isInbetweenRange 1 5 E4)
        (isInbetweenRange 1 5 E5)

        ; restricting numbers in all rows and columns to be distinct
        (distinct A1 A2 A3 A4 A5)
        (distinct B1 B2 B3 B4 B5)
        (distinct C1 C2 C3 C4 C5)
        (distinct D1 D2 D3 D4 D5)
        (distinct E1 E2 E3 E4 E5)

        (distinct A1 B1 C1 D1 E1)
        (distinct A2 B2 C2 D2 E2)
        (distinct A3 B3 C3 D3 E3)
        (distinct A4 B4 C4 D4 E4)
        (distinct A5 B5 C5 D5 E5)
    )
)


(check-sat)
(get-model)